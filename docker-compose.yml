services:
  postgres:
    image: postgres:16
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./postgres/nextcloud-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
      PGDATA: ${NEXTCLOUD_DB_PGDATA}

    networks:
      - nextcloud-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${NEXTCLOUD_DB_NAME}", "-U", "${NEXTCLOUD_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  redis:
    image: redis:7.2
    command: ["redis-server", "--requirepass", "$NEXTCLOUD_REDIS_PASSWORD"]
    volumes:
      - ./redis/data:/data
    networks:
      - nextcloud-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    image: nextcloud:28.0-apache
    volumes:
      - nextcloud-data:/var/www/html
    environment:
      #POSTGRES VARIABLES
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
      POSTGRES_HOST: ${NEXTCLOUD_DB_HOST}
      POSTGRES_PORT: ${NEXTCLOUD_DB_PORT}
      #REDIS VARIABLES
      REDIS_HOST: redis
      REDIS_HOST_PORT: 6379
      REDIS_HOST_PASSWORD: ${NEXTCLOUD_REDIS_PASSWORD}
      REDIS_HOST_FALLBACK_LIMIT: 5  # Optional: set a fallback limit
      REDIS_SESSION_SAVE_HANDLER: redis  # Explicitly set Redis as session handler
      REDIS_SESSION_SAVE_PATH: "tcp://redis:6379?auth=${NEXTCLOUD_REDIS_PASSWORD}"
      #NEXTCLOUD VARIABLES
      NEXTCLOUD_DEFAULT_PHONE_REGION: "AR"  # Replace US with your country's ISO 3166-1 code
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USERNAME}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_HOSTNAME}
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_AUTHTYPE: ${SMTP_AUTHTYPE}
      SMTP_NAME: ${SMTP_NAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_DOMAIN: ${MAIL_DOMAIN}
      #APACHE CONFIG
      TRUSTED_PROXIES: "172.18.0.0/16"
      APACHE_DISABLE_REWRITE_IP: 1
      APACHE_REMOTEIP_ENABLE: 1
      APACHE_ENABLE_MO_REWRITE: 1
      APACHE_BODY_LIMIT: 0
      APACHE_SERVER_NAME: ${NEXTCLOUD_HOSTNAME}
      APACHE_SERVER_ADMIN: ${NEXTCLOUD_ADMIN_EMAIL}
      APACHE_ENABLE_SSL: false

      TZ: ${NEXTCLOUD_TIMEZONE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOSTNAME}`)"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=le"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.services.nextcloud.loadbalancer.passhostheader=true"
      - "traefik.http.middlewares.nextcloud-securityheaders.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud-securityheaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud-securityheaders.headers.stsPreload=true"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud_redirectregex@docker, nextcloud-securityheaders"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex=https://(.*)/.well-known/(?:card|cal)dav"
      - "traefik.http.middlewares.nextcloud_redirectregex.redirectregex.replacement=https://$${1}/remote.php/dav"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.docker.network=traefik-server"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nextcloud-network
      - traefik-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s

  nextcloud-cron:
    image: nextcloud:28.0-apache
    entrypoint: /cron.sh
    environment:
      - NEXTCLOUD_UPDATE=1
    volumes:
      - nextcloud-data:/var/www/html
    networks:
      - nextcloud-network
    depends_on:
      - nextcloud
    restart: unless-stopped

networks:
  nextcloud-network:
    external: true
  traefik-server:
    external: true

volumes:
  nextcloud-data:
  redis-data:
  nextcloud-postgres:
