version: '3.8'
services:
  postgres:
    image: postgres:16
    volumes:
      - ./postgres/initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
    networks:
      - nextcloud-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NEXTCLOUD_DB_USER} -d ${NEXTCLOUD_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    command: redis-server --requirepass ${NEXTCLOUD_REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - nextcloud-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${NEXTCLOUD_REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    image: nextcloud:28.0-apache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - nextcloud_data:/var/www/html
      # TODO RESEARCH AND ADD EXECUTABLE FILE WITH COMMANDS TO INITIALIZE NEXTCLOUD AT THE MOST UPDATED VERSION
    command: docker/nextcloud-docker-entrypoint.sh
    environment:
      # Database configuration
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${NEXTCLOUD_DB_PORT}
      # Redis configuration
      REDIS_HOST: redis
      REDIS_HOST_PORT: ${NEXTCLOUD_REDIS_PORT}
      REDIS_HOST_PASSWORD: ${NEXTCLOUD_REDIS_PASSWORD}
      REDIS_SESSION_STORE: 1
      # Nextcloud configuration
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USERNAME}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_HOSTNAME}
      # SMTP configuration
      PHP_MEMORY_LIMIT: 1G
      PHP_UPLOAD_LIMIT: 10G
      MAIL_DOMAIN: ${MAIL_DOMAIN}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS}
      MAIL_SMTP_SECURE: ${SMTP_SECURE}
      MAIL_SMTP_HOST: ${SMTP_HOST}
      MAIL_SMTP_PORT: ${SMTP_PORT}
      MAIL_SMTP_AUTHTYPE: LOGIN
      MAIL_SMTP_NAME: ${SMTP_NAME}
      MAIL_SMTP_PASSWORD: ${SMTP_PASSWORD}
      # Overwrite configuration
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: ${NEXTCLOUD_HOSTNAME}
      OVERWRITECLIURL: https://${NEXTCLOUD_HOSTNAME}
      TRUSTED_PROXIES: "172.64.1.0/16, fd00:1::/64" # Ajustar seg√∫n red de Traefik
      APACHE_REMOTEIP_ENABLE: 1
      # Optimizations
      APCU_ENABLE: 1
      PHP_OPCACHE_ENABLE: 1
      # Other settings
      TZ: ${NEXTCLOUD_TIMEZONE}

    networks:
      - nextcloud-network
      - traefik-server
    labels:
      - traefik.enable=true
      # Router configuration
      - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOSTNAME}`)
      - traefik.http.routers.nextcloud.entrypoints=websecure
      # TLS configuration
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=le
      - traefik.http.routers.nextcloud.tls.domains[0].main=${NEXTCLOUD_HOSTNAME}
      # Security middleware configuration
      - traefik.http.middlewares.nextcloud-headers.headers.sslredirect=true
      - traefik.http.middlewares.nextcloud-headers.headers.stsseconds=31536000
      - traefik.http.middlewares.nextcloud-headers.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.routers.nextcloud.middlewares=nextcloud-headers
      # Service configuration
      - traefik.http.services.nextcloud.loadbalancer.server.port=80
      - traefik.docker.network=traefik-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  nextcloud-cron:
    image: nextcloud:28.0-apache
    entrypoint: /cron.sh
    volumes:
      - nextcloud_data:/var/www/html
    depends_on:
      - nextcloud
    networks:
      - nextcloud-network
    restart: unless-stopped

networks:
  nextcloud-network:
    name: nextcloud-network
    driver: bridge
    enable_ipv6: true
    ipam:
      config:
        - subnet: 172.16.1.0/24
        - subnet: fd00:16::/64 
  traefik-server:
    external: true

volumes:
  nextcloud_data:
  redis_data:
  postgres_data: